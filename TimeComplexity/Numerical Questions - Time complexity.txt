1. Algorithm
step by step process to solve any problem.

2. Analysis:Time Complexity/Space Complexity

Time Complexity: a. Theoritical(Perior Analysis). b Practical(Posterior Analysis)

Perior Analysis

1. count Number of executable steps

2. Represent the steps in the form of nations: Big O, Omega and Theta
Big O: Maximum Time or exact

 Omega : Minimum Time or exact

 Theta: Exact or average
............................................................
Data Structure
.................................................................
  Numericals/Questions  
1.
for(i=0;i<n;i++)
{
statement;
}

Ans : n, O(n)
---------------------------------------------------------------
2. 
for(i=0;i<n/2;i++)
{
statement;
}

ans: O(n/2), O(n)
---------------------------------------------------------------
3.
for(i=0;i<n;i++)///n
{
for(j=0;j<n;j++)///n
{
statement;
}

 }
ans: O(n*n)=O(n^2)

i=0; j=n
i=1; j=n
i=2; j=n

i=n-1; j=n

n+n+..........+n
n(1+1+...........+1)
n(n)=n*n=O(n^2)
---------------------------------------------------------------
4. 
for(i=0;i<n/2;i++)///n
{
for(j=0;j<n/2;j++)///n
{
statement;
}

 }

ans: n/2*n/2=n^2/4====O(n^2)

---------------------------------------------------------------
5. 
for(i=0;i<n;i++)///n
{​​​
for(j=0;j<n;j++)///n
{​​​
for(k=0;k<n;k++)//n
{​​​
statement;
}​​​
}​​​

 }​​​
ans: O(n^3)

​[14-07 12:41 pm] 100100
    for(i=n; i>=1; i=i/2)
{​​​
statement;
}​​​
-----------------------------------------------------------------

6. 
for(i=n; i>=1; i=i/2){​​​
statement;
}​​​

ans: i=n

i=n/2
i=n/4
 i=n/8
 n/2^K=1
n=2^K
logn= k
---------------------------------------------------------
7. 
for(i=n; i>=1; i=i/3)
{​​​
statement;
}​​​
ans: i=n
i=n/3
i=n/9
 i=n/27
 n/3^K=1
n=3^K
logn= k
---------------------------------------------------------
6. 
for(i=n; i>=1; i=i/5)
{​​​
statement;
}​​​
ans: i=n
i=n/5
i=n/25
 i=n/125
 n/5^K=1
n=5^K
logn= k

---------------------------------------------------------
15-07 10:54 am
8. for(i=0;i<n;i++)////n
{
for(j=n;j>=1;j=j/2)////logn
{
statement;
}

}

ans: n*logn
----------------------------------------------------------------
9. for(i=1;i<n;i++)
{
for(j=i;j>=1;j--)
{
statement;//executable statement;
}
}
ans:i=1 j=1
i=2 j=2

 1+2+3+4+..............n-1=n*(n-1)/2= n^2/2- n/2= n^2-n=n^2=O(n^2)
-----------------------------------------------------------------
10. for(i=1; i<=n; i=i*2)
{

 statement;
}
ans: i=1
2, 4, 8,
2^k=n
k=logn
----------------------------------------------------------------
11. for(i=1; i<=n; i=i*3)
{
 statement;
}

ans: logn
--------------------------------------------------------------------
12. for(i=1; i<=n; i=i*5)
{
statement;
}

ans: logn
------------------------------------------------------------------- 
